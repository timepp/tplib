<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>PDB下载工具 V2.0</title>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta http-equiv="MSThemeCompatible" content="Yes">
		<link rel="stylesheet" href="htastyle.css" />
		<script type="text/javascript" src="json2.js"></script>
		<script type="text/javascript" src="common.js"></script>
		<hta:application id="HTA" scroll="no" icon="mobsync.exe" windowstate="maximize" />
		<script language="javascript">
			var globalsetting = {
				conf_file: "default.conf"
			};
			var gp = {
				pdbroot: "",
				product: "app/gensoft/ime/navi",
				version: "1.0.0.1",
				batch: "",
				flt: {
					include_dir: "", exclude_dir: "", include_file: "exe,dll,pdb", exclude_file: ""
				}
			};
			var es = {
				product_name: "",
				pdb_path: "",
				fromconf: function (c) {
					this.product_name = c.product.replace(/.*\//g, "");
					this.pdb_path = c.pdbroot + (c.pdbroot.length ? "\\" : "") + this.product_name + "\\" + c.version;
				}
			};
			var CONF = "get_pdb.setting";

			function conf_to_control(c) {
				i_pdb_root_path.value = c.pdbroot;
				i_ver.value = c.version;
				i_product.value = c.product;
				ta_batch.value = c.batch;
				i_fed.value = c.flt.exclude_dir;
				i_fid.value = c.flt.include_dir;
				i_fef.value = c.flt.exclude_file;
				i_fif.value = c.flt.include_file;
			}
			function control_to_conf() {
				return {
					pdbroot: i_pdb_root_path.value,
					version: i_ver.value,
					product: i_product.value,
					batch: ta_batch.value,
					flt: {
						exclude_dir: i_fed.value,
						include_dir: i_fid.value,
						exclude_file: i_fef.value,
						include_file: i_fif.value
					}
				}
			}

			function GetDownloadCommand() {
				var ver_remote = gp.version.replace(/\./g, "-");
				var cmd = "wget.exe\n"
				+ "--ftp-user=getprod --ftp-password=getprod\n"
				+ "--recursive --no-clobber --no-host-directories --no-directories\n"
				+ "--include-directories=%ID%\n"
				+ "--exclude-directories=%ED%\n"
				+ "--accept=%IF%\n"
				+ "--reject=%EF%\n"
				+ "--directory-prefix=\"%VER%\"\n"
				+ "\"ftp://jx-scm-product.jx.baidu.com/../../home/data/prod-32/%PRODUCT_PATH%/%PRODUCT%_%VER_REMOTE%_PD_BL/output\"";
				cmd = cmd.replace(/%VER%/g, es.pdb_path).replace(/%VER_REMOTE%/g, ver_remote).replace(/%PRODUCT_PATH%/g, gp.product).replace(/%PRODUCT%/g, es.product_name);
				cmd = cmd.replace(/%ID%/g, gp.flt.include_dir).replace(/%ED%/g, gp.flt.exclude_dir).replace(/%IF%/g, gp.flt.include_file).replace(/%EF%/g, gp.flt.exclude_file);
				return cmd;
			}

			function Init() {
				var gs = LoadObject(CONF);
				if (!gs) gs = globalsetting;
				globalsetting = gs;

				var conf = LoadObject(gs.conf_file);
				if (!conf) {
					conf = gp;
					gs.conf_file = "default.conf";
					SaveObject(gp, gs.conf_file);
				}
				conf_to_control(conf);

				var f = fso.GetFolder(".");
				var fc = new Enumerator(f.files);
				var i = 0;
				var index = 0;
				for (; !fc.atEnd(); fc.moveNext())
				{
					var file = fc.item();
					if (file.Name.match(/.*\.conf$/i))
					{
						var opt = document.createElement("OPTION");
						opt.text = file.Name;
						opt.value = file.Name;
						i_conf.add(opt);
						if (file.Name == globalsetting.conf_file) {
							index = i;
						}
						i++;
					}
				}
				i_conf.selectedIndex = index;

			}

			function OnConfigChange() {
				var conf_file = i_conf.options[i_conf.selectedIndex].value;

				gp = control_to_conf();
				SaveObject(gp, globalsetting.conf_file);

				globalsetting.conf_file = conf_file;
				SaveObject(globalsetting, CONF);

				var conf = LoadObject(conf_file);
				if (conf) conf_to_control(conf);
				gp = control_to_conf();

				OnInputChange();
			}

			function OnInputChange() {
				gp = control_to_conf();
				es.fromconf(gp);
				ta_wget.innerText = GetDownloadCommand();
			}

			function DownLoad() {
				SaveObject(gp, globalsetting.conf_file);

				if (fso.FolderExists(es.pdb_path)) {
					if (!confirm("目录已存在，要重新下载吗？")) return;
				}
				var cmd = ta_wget.value;
				cmd = cmd.replace(/\n/g, " ").replace(/\r/g, " ");
				shell.Run(cmd,1,true);

				ExecuteUserBatch();
			}

			function EditSelf() {
				shell.Run("notepad " + HTA.commandLine);
			}

			function OpenPdbPath() {
				shell.Run(es.pdb_path);
			}

			function ExecuteUserBatch() {
				var batch = gp.batch;
				batch = batch.replace(/%PDBDIR%/g, es.pdb_path)
				batch = batch.replace(/%PDBROOT%/g, gp.pdb_root)
				batch = batch.replace(/%PRODUCT%/g, es.product_name)
				batch = batch.replace(/%VERSION%/g, gp.version);
				var batch_file = fso.GetSpecialFolder(2) + "\\getpdb.bat";
				SaveFile(batch_file, batch);
				shellapp.ShellExecute(batch_file);
			}
		</script>
	</head>
	<body onload="Init()" onkeydown="if (event.keyCode == 27) window.close()">
		<span class="inputip">选择配置文件：</span>
		<select id="i_conf" onchange="OnConfigChange()">
		</select>
		<hr />
		<table><tr><td>
					<span class="inputip">产品线</span><span class="warning">＊　</span>：
					<input type="text" style="width:75%" id="i_product" onpropertychange="OnInputChange()"></input>
					<br />

					<span class="inputip">产品版本</span><span class="warning">＊</span>：
					<input type="text" style="width:75%" id="i_ver" onpropertychange="OnInputChange()"></input>
					<br />

					<span class="inputip">下载目录　：</span>
					<input type="text" style="width:75%" id="i_pdb_root_path" onpropertychange="OnInputChange()"></input>
					<br />

					<span class="inpupip">产品代号　：</span>
					<input type="text" style="width:75%" id="i_code" onpropertychange="OnInputChange()"></input>
					<br />

				</td>

				<td>
					<span class="inpupip">包含的目录：</span>
					<input type="text" style="width:75%" id="i_fid" onpropertychange="OnInputChange()"></input>
					<br />
					<span class="inpupip">排除的目录：</span>
					<input type="text" style="width:75%" id="i_fed" onpropertychange="OnInputChange()"></input>
					<br />
					<span class="inpupip">包含的文件：</span>
					<input type="text" style="width:75%" id="i_fif" onpropertychange="OnInputChange()"></input>
					<br />
					<span class="inpupip">排除的文件：</span>
					<input type="text" style="width:75%" id="i_fef" onpropertychange="OnInputChange()"></input>
					<br />
		</td></tr></table>

		<br />
		<span class="em">wget命令行：（根据上面输入自动生成，如有必要也可手动修改）</span><br />
		<textarea rows="10" id="ta_wget"></textarea>
		<br />
		<span class="inputip">下载后执行的批处理命令：</span><br />
		<textarea rows="4" id="ta_batch" onpropertychange="OnInputChange()"></textarea>
		<br />
		<button onclick="DownLoad()">
			下载</button>
		<br />
		<br />
		<hr />
		说明：<br />
		<span class="ref" style="cursor: hand;" onclick="EditSelf()">本程序</span>用于从编译机上下载指定版本的PDB和binary进行崩溃分析。下载到本地后这些文件全部保存在<span class="ref" style="cursor: hand"	onclick="OpenPdbPath()">下载目录\产品名\产品版本</span>这个目录下。<br />
		下载时可以只下载和分析崩溃有关的文件（<span class="em">通过文件和目录的过滤器指定</span>）。<br />
		标记红色星号的项为必填项。<br />
		<span class="warning">本程序调用wget.exe进行下载，请确保wget.exe放在能找得到的地方（比如在%path%环境变量里）。</span>
	</body>
</html>
